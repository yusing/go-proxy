{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "additionalProperties": {
        "anyOf": [
            {
                "additionalProperties": false,
                "properties": {
                    "access_log": {
                        "additionalProperties": false,
                        "description": "Access log config",
                        "examples": [
                            {
                                "fields": {
                                    "headers": {
                                        "config": {
                                            "foo": "redact"
                                        },
                                        "default": "keep"
                                    }
                                },
                                "filters": {
                                    "status_codes": {
                                        "values": [
                                            "200-299"
                                        ]
                                    }
                                },
                                "format": "combined",
                                "path": "/var/log/access.log"
                            }
                        ],
                        "properties": {
                            "buffer_size": {
                                "default": 65536,
                                "description": "The size of the buffer.",
                                "minimum": 0,
                                "type": "integer"
                            },
                            "fields": {
                                "additionalProperties": false,
                                "properties": {
                                    "cookie": {
                                        "additionalProperties": false,
                                        "properties": {
                                            "config": {
                                                "additionalProperties": {
                                                    "enum": [
                                                        "drop",
                                                        "keep",
                                                        "redact"
                                                    ],
                                                    "type": "string"
                                                },
                                                "type": "object"
                                            },
                                            "default": {
                                                "$ref": "#/definitions/AccessLogFieldMode"
                                            }
                                        },
                                        "required": [
                                            "config"
                                        ],
                                        "type": "object"
                                    },
                                    "header": {
                                        "additionalProperties": false,
                                        "properties": {
                                            "config": {
                                                "additionalProperties": {
                                                    "enum": [
                                                        "drop",
                                                        "keep",
                                                        "redact"
                                                    ],
                                                    "type": "string"
                                                },
                                                "type": "object"
                                            },
                                            "default": {
                                                "$ref": "#/definitions/AccessLogFieldMode"
                                            }
                                        },
                                        "required": [
                                            "config"
                                        ],
                                        "type": "object"
                                    },
                                    "query": {
                                        "additionalProperties": false,
                                        "properties": {
                                            "config": {
                                                "additionalProperties": {
                                                    "enum": [
                                                        "drop",
                                                        "keep",
                                                        "redact"
                                                    ],
                                                    "type": "string"
                                                },
                                                "type": "object"
                                            },
                                            "default": {
                                                "$ref": "#/definitions/AccessLogFieldMode"
                                            }
                                        },
                                        "required": [
                                            "config"
                                        ],
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            },
                            "filters": {
                                "additionalProperties": false,
                                "properties": {
                                    "cidr": {
                                        "additionalProperties": false,
                                        "properties": {
                                            "negative": {
                                                "default": false,
                                                "description": "Whether the filter is negative.",
                                                "type": "boolean"
                                            },
                                            "values": {
                                                "items": {
                                                    "$ref": "#/definitions/CIDR"
                                                },
                                                "type": "array"
                                            }
                                        },
                                        "required": [
                                            "values"
                                        ],
                                        "type": "object"
                                    },
                                    "headers": {
                                        "additionalProperties": false,
                                        "properties": {
                                            "negative": {
                                                "default": false,
                                                "description": "Whether the filter is negative.",
                                                "type": "boolean"
                                            },
                                            "values": {
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            }
                                        },
                                        "required": [
                                            "values"
                                        ],
                                        "type": "object"
                                    },
                                    "host": {
                                        "additionalProperties": false,
                                        "properties": {
                                            "negative": {
                                                "default": false,
                                                "description": "Whether the filter is negative.",
                                                "type": "boolean"
                                            },
                                            "values": {
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            }
                                        },
                                        "required": [
                                            "values"
                                        ],
                                        "type": "object"
                                    },
                                    "method": {
                                        "additionalProperties": false,
                                        "properties": {
                                            "negative": {
                                                "default": false,
                                                "description": "Whether the filter is negative.",
                                                "type": "boolean"
                                            },
                                            "values": {
                                                "items": {
                                                    "enum": [
                                                        "CONNECT",
                                                        "DELETE",
                                                        "GET",
                                                        "HEAD",
                                                        "OPTIONS",
                                                        "PATCH",
                                                        "POST",
                                                        "PUT",
                                                        "TRACE"
                                                    ],
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            }
                                        },
                                        "required": [
                                            "values"
                                        ],
                                        "type": "object"
                                    },
                                    "status_code": {
                                        "additionalProperties": false,
                                        "properties": {
                                            "negative": {
                                                "default": false,
                                                "description": "Whether the filter is negative.",
                                                "type": "boolean"
                                            },
                                            "values": {
                                                "items": {
                                                    "$ref": "#/definitions/StatusCodeRange"
                                                },
                                                "type": "array"
                                            }
                                        },
                                        "required": [
                                            "values"
                                        ],
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            },
                            "format": {
                                "$ref": "#/definitions/AccessLogFormat",
                                "default": "combined",
                                "description": "The format of the access log."
                            },
                            "path": {
                                "format": "uri-reference",
                                "type": "string"
                            }
                        },
                        "required": [
                            "path"
                        ],
                        "type": "object"
                    },
                    "alias": {
                        "description": "Alias (subdomain or FDN)",
                        "minLength": 1,
                        "type": "string"
                    },
                    "healthcheck": {
                        "additionalProperties": false,
                        "description": "Healthcheck config",
                        "properties": {
                            "disable": {
                                "default": false,
                                "description": "Disable healthcheck",
                                "type": "boolean"
                            },
                            "interval": {
                                "default": "5s",
                                "description": "Healthcheck interval",
                                "pattern": "^([0-9]+(ms|s|m|h))+$",
                                "type": "string"
                            },
                            "path": {
                                "default": "/",
                                "description": "Healthcheck path",
                                "format": "uri-reference",
                                "type": "string"
                            },
                            "timeout": {
                                "default": "5s",
                                "description": "Healthcheck timeout",
                                "pattern": "^([0-9]+(ms|s|m|h))+$",
                                "type": "string"
                            },
                            "use_get": {
                                "default": false,
                                "description": "Use GET instead of HEAD",
                                "type": "boolean"
                            }
                        },
                        "type": "object"
                    },
                    "homepage": {
                        "additionalProperties": false,
                        "description": "Homepage config",
                        "examples": [
                            {
                                "category": "Arr suite",
                                "icon": "png/sonarr.png",
                                "name": "Sonarr"
                            },
                            {
                                "icon": "@target/favicon.ico",
                                "name": "App"
                            }
                        ],
                        "properties": {
                            "category": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            },
                            "icon": {
                                "type": "string"
                            },
                            "name": {
                                "type": "string"
                            },
                            "show": {
                                "default": true,
                                "description": "Whether show in dashboard",
                                "type": "boolean"
                            },
                            "url": {
                                "format": "uri",
                                "type": "string"
                            },
                            "widget_config": {
                                "additionalProperties": {},
                                "type": "object"
                            }
                        },
                        "type": "object"
                    },
                    "host": {
                        "default": "localhost",
                        "description": "Proxy host",
                        "type": "string"
                    },
                    "idle_timeout": {
                        "pattern": "^([0-9]+(ms|s|m|h))+$",
                        "type": "string"
                    },
                    "load_balance": {
                        "$ref": "#/definitions/LoadBalanceConfig",
                        "description": "Load balance config"
                    },
                    "middlewares": {
                        "$ref": "#/definitions/MiddlewaresMap",
                        "description": "Middlewares"
                    },
                    "no_tls_verify": {
                        "default": false,
                        "description": "Skip TLS verification",
                        "type": "boolean"
                    },
                    "path_patterns": {
                        "description": "Path patterns (only patterns that match will be proxied).\n\nSee https://pkg.go.dev/net/http#hdr-Patterns-ServeMux",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "port": {
                        "default": 80,
                        "description": "Proxy port",
                        "maximum": 65535,
                        "minimum": 0,
                        "type": "integer"
                    },
                    "scheme": {
                        "$ref": "#/definitions/ProxyScheme",
                        "default": "http",
                        "description": "Proxy scheme"
                    },
                    "start_endpoint": {
                        "format": "uri-reference",
                        "type": "string"
                    },
                    "stop_method": {
                        "$ref": "#/definitions/StopMethod",
                        "default": "stop",
                        "description": "Stop method"
                    },
                    "stop_signal": {
                        "$ref": "#/definitions/Signal"
                    },
                    "stop_timeout": {
                        "default": "10s",
                        "description": "Stop timeout",
                        "pattern": "^([0-9]+(ms|s|m|h))+$",
                        "type": "string"
                    },
                    "wake_timeout": {
                        "default": "30s",
                        "description": "Wake timeout",
                        "pattern": "^([0-9]+(ms|s|m|h))+$",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            {
                "additionalProperties": false,
                "properties": {
                    "alias": {
                        "description": "Alias (subdomain or FDN)",
                        "minLength": 1,
                        "type": "string"
                    },
                    "healthcheck": {
                        "additionalProperties": false,
                        "description": "Healthcheck config",
                        "properties": {
                            "disable": {
                                "default": false,
                                "description": "Disable healthcheck",
                                "type": "boolean"
                            },
                            "interval": {
                                "default": "5s",
                                "description": "Healthcheck interval",
                                "pattern": "^([0-9]+(ms|s|m|h))+$",
                                "type": "string"
                            },
                            "path": {
                                "default": "/",
                                "description": "Healthcheck path",
                                "format": "uri-reference",
                                "type": "string"
                            },
                            "timeout": {
                                "default": "5s",
                                "description": "Healthcheck timeout",
                                "pattern": "^([0-9]+(ms|s|m|h))+$",
                                "type": "string"
                            },
                            "use_get": {
                                "default": false,
                                "description": "Use GET instead of HEAD",
                                "type": "boolean"
                            }
                        },
                        "type": "object"
                    },
                    "host": {
                        "default": "localhost",
                        "description": "Stream host",
                        "type": "string"
                    },
                    "idle_timeout": {
                        "pattern": "^([0-9]+(ms|s|m|h))+$",
                        "type": "string"
                    },
                    "port": {
                        "pattern": "^\\d+:\\d+$",
                        "type": "string"
                    },
                    "scheme": {
                        "$ref": "#/definitions/StreamScheme",
                        "default": "tcp",
                        "description": "Stream scheme"
                    },
                    "start_endpoint": {
                        "format": "uri-reference",
                        "type": "string"
                    },
                    "stop_method": {
                        "$ref": "#/definitions/StopMethod",
                        "default": "stop",
                        "description": "Stop method"
                    },
                    "stop_signal": {
                        "$ref": "#/definitions/Signal"
                    },
                    "stop_timeout": {
                        "default": "10s",
                        "description": "Stop timeout",
                        "pattern": "^([0-9]+(ms|s|m|h))+$",
                        "type": "string"
                    },
                    "wake_timeout": {
                        "default": "30s",
                        "description": "Wake timeout",
                        "pattern": "^([0-9]+(ms|s|m|h))+$",
                        "type": "string"
                    }
                },
                "required": [
                    "port",
                    "scheme"
                ],
                "type": "object"
            }
        ]
    },
    "definitions": {
        "AccessLogFieldMode": {
            "enum": [
                "drop",
                "keep",
                "redact"
            ],
            "type": "string"
        },
        "AccessLogFormat": {
            "enum": [
                "combined",
                "common",
                "json"
            ],
            "type": "string"
        },
        "CIDR": {
            "anyOf": [
                {
                    "pattern": "^[0-9]*\\.[0-9]*\\.[0-9]*\\.[0-9]*$",
                    "type": "string"
                },
                {
                    "pattern": "^.*:.*:.*:.*:.*:.*:.*:.*$",
                    "type": "string"
                },
                {
                    "pattern": "^[0-9]*\\.[0-9]*\\.[0-9]*\\.[0-9]*/[0-9]*$",
                    "type": "string"
                },
                {
                    "pattern": "^::[0-9]*$",
                    "type": "string"
                },
                {
                    "pattern": "^.*::/[0-9]*$",
                    "type": "string"
                },
                {
                    "pattern": "^.*:.*::/[0-9]*$",
                    "type": "string"
                }
            ]
        },
        "LoadBalanceConfig": {
            "additionalProperties": false,
            "anyOf": [
                {
                    "additionalProperties": false,
                    "properties": {
                        "link": {
                            "description": "Alias (subdomain or FDN) of load-balancer",
                            "minLength": 1,
                            "type": "string"
                        },
                        "mode": {
                            "const": "round_robin",
                            "type": "string"
                        },
                        "weight": {
                            "description": "Load-balance weight (reserved for future use)",
                            "maximum": 100,
                            "minimum": 0,
                            "type": "number"
                        }
                    },
                    "required": [
                        "link",
                        "mode"
                    ],
                    "type": "object"
                },
                {
                    "additionalProperties": false,
                    "properties": {
                        "link": {
                            "description": "Alias (subdomain or FDN) of load-balancer",
                            "minLength": 1,
                            "type": "string"
                        },
                        "mode": {
                            "const": "least_conn",
                            "type": "string"
                        },
                        "weight": {
                            "description": "Load-balance weight (reserved for future use)",
                            "maximum": 100,
                            "minimum": 0,
                            "type": "number"
                        }
                    },
                    "required": [
                        "link",
                        "mode"
                    ],
                    "type": "object"
                },
                {
                    "additionalProperties": false,
                    "properties": {
                        "config": {
                            "additionalProperties": false,
                            "description": "Real IP config, header to get client IP from",
                            "properties": {
                                "from": {
                                    "items": {
                                        "$ref": "#/definitions/CIDR"
                                    },
                                    "type": "array"
                                },
                                "header": {
                                    "default": "X-Real-IP",
                                    "description": "Header to get the client IP from",
                                    "pattern": "^[a-zA-Z0-9\\-]+$",
                                    "type": "string"
                                },
                                "recursive": {
                                    "default": false,
                                    "description": "Recursive resolve the IP",
                                    "type": "boolean"
                                },
                                "use": {
                                    "enum": [
                                        "RealIP",
                                        "realIP",
                                        "real_ip"
                                    ],
                                    "type": "string"
                                }
                            },
                            "required": [
                                "from",
                                "use"
                            ],
                            "type": "object"
                        },
                        "link": {
                            "description": "Alias (subdomain or FDN) of load-balancer",
                            "minLength": 1,
                            "type": "string"
                        },
                        "mode": {
                            "const": "ip_hash",
                            "type": "string"
                        },
                        "weight": {
                            "description": "Load-balance weight (reserved for future use)",
                            "maximum": 100,
                            "minimum": 0,
                            "type": "number"
                        }
                    },
                    "required": [
                        "config",
                        "link",
                        "mode"
                    ],
                    "type": "object"
                }
            ]
        },
        "MiddlewaresMap": {
            "anyOf": [
                {
                    "additionalProperties": false,
                    "properties": {
                        "use": {
                            "pattern": "^.*@file$",
                            "type": "string"
                        }
                    },
                    "required": [
                        "use"
                    ],
                    "type": "object"
                },
                {
                    "$ref": "#/definitions/{error_page:Omit<CustomErrorPage,\"use\">;errorPage:Omit<CustomErrorPage,\"use\">;ErrorPage:Omit<CustomErrorPage,\"use\">;custom_error_page:Omit<CustomErrorPage,\"use\">;customErrorPage:Omit<CustomErrorPage,\"use\">;CustomErrorPage:Omit<CustomErrorPage,\"use\">;}"
                },
                {
                    "$ref": "#/definitions/{redirect_http:Omit<RedirectHTTP,\"use\">;redirectHTTP:Omit<RedirectHTTP,\"use\">;RedirectHTTP:Omit<RedirectHTTP,\"use\">;}"
                },
                {
                    "$ref": "#/definitions/{set_x_forwarded:Omit<SetXForwarded,\"use\">;setXForwarded:Omit<SetXForwarded,\"use\">;SetXForwarded:Omit<SetXForwarded,\"use\">;}"
                },
                {
                    "$ref": "#/definitions/{hide_x_forwarded:Omit<HideXForwarded,\"use\">;hideXForwarded:Omit<HideXForwarded,\"use\">;HideXForwarded:Omit<HideXForwarded,\"use\">;}"
                },
                {
                    "$ref": "#/definitions/{cidr_whitelist:Omit<CIDRWhitelist,\"use\">;cidrWhitelist:Omit<CIDRWhitelist,\"use\">;CIDRWhitelist:Omit<CIDRWhitelist,\"use\">;}"
                },
                {
                    "$ref": "#/definitions/{cloudflare_real_ip:Omit<CloudflareRealIP,\"use\">;cloudflareRealIp:Omit<CloudflareRealIP,\"use\">;}"
                },
                {
                    "$ref": "#/definitions/{request:Omit<ModifyRequest,\"use\">;Request:Omit<ModifyRequest,\"use\">;modify_request:Omit<ModifyRequest,\"use\">;modifyRequest:Omit<ModifyRequest,\"use\">;ModifyRequest:Omit<ModifyRequest,\"use\">;}"
                },
                {
                    "$ref": "#/definitions/{response:Omit<ModifyResponse,\"use\">;Response:Omit<ModifyResponse,\"use\">;modify_response:Omit<ModifyResponse,\"use\">;modifyResponse:Omit<ModifyResponse,\"use\">;ModifyResponse:Omit<ModifyResponse,\"use\">;}"
                },
                {
                    "$ref": "#/definitions/{oidc:Omit<OIDC,\"use\">;OIDC:Omit<OIDC,\"use\">;}"
                },
                {
                    "$ref": "#/definitions/{rate_limit:Omit<RateLimit,\"use\">;rateLimit:Omit<RateLimit,\"use\">;RateLimit:Omit<RateLimit,\"use\">;}"
                },
                {
                    "$ref": "#/definitions/{real_ip:Omit<RealIP,\"use\">;realIP:Omit<RealIP,\"use\">;RealIP:Omit<RealIP,\"use\">;}"
                },
                {
                    "$ref": "#/definitions/{[x:`${string}@file`]:NullOrEmptyMap;}"
                }
            ]
        },
        "Omit<CIDRWhitelist,\"use\">": {
            "additionalProperties": false,
            "properties": {
                "allow": {
                    "items": {
                        "$ref": "#/definitions/CIDR"
                    },
                    "type": "array"
                },
                "message": {
                    "default": "IP not allowed",
                    "description": "Error message when blocked",
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/StatusCode",
                    "default": 403,
                    "description": "HTTP status code when blocked (alias of status_code)"
                },
                "status_code": {
                    "$ref": "#/definitions/StatusCode",
                    "default": 403,
                    "description": "HTTP status code when blocked"
                }
            },
            "required": [
                "allow"
            ],
            "type": "object"
        },
        "Omit<CloudflareRealIP,\"use\">": {
            "additionalProperties": false,
            "properties": {
                "recursive": {
                    "default": false,
                    "description": "Recursively resolve the IP",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "Omit<CustomErrorPage,\"use\">": {
            "additionalProperties": false,
            "type": "object"
        },
        "Omit<HideXForwarded,\"use\">": {
            "additionalProperties": false,
            "type": "object"
        },
        "Omit<ModifyRequest,\"use\">": {
            "additionalProperties": false,
            "properties": {
                "add_headers": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Add HTTP headers",
                    "type": "object"
                },
                "hide_headers": {
                    "description": "Hide HTTP headers",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "set_headers": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Set HTTP headers",
                    "type": "object"
                }
            },
            "type": "object"
        },
        "Omit<ModifyResponse,\"use\">": {
            "additionalProperties": false,
            "properties": {
                "add_headers": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Add HTTP headers",
                    "type": "object"
                },
                "hide_headers": {
                    "description": "Hide HTTP headers",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "set_headers": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Set HTTP headers",
                    "type": "object"
                }
            },
            "type": "object"
        },
        "Omit<OIDC,\"use\">": {
            "additionalProperties": false,
            "properties": {
                "allowed_groups": {
                    "description": "Allowed groups",
                    "items": {
                        "type": "string"
                    },
                    "minItems": 1,
                    "type": "array"
                },
                "allowed_users": {
                    "description": "Allowed users",
                    "items": {
                        "type": "string"
                    },
                    "minItems": 1,
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Omit<RateLimit,\"use\">": {
            "additionalProperties": false,
            "properties": {
                "average": {
                    "description": "Average number of requests allowed in a period",
                    "type": "number"
                },
                "burst": {
                    "description": "Maximum number of requests allowed in a period",
                    "type": "number"
                },
                "period": {
                    "default": "1s",
                    "description": "Duration of the rate limit",
                    "pattern": "^([0-9]+(ms|s|m|h))+$",
                    "type": "string"
                }
            },
            "required": [
                "average",
                "burst"
            ],
            "type": "object"
        },
        "Omit<RealIP,\"use\">": {
            "additionalProperties": false,
            "properties": {
                "from": {
                    "items": {
                        "$ref": "#/definitions/CIDR"
                    },
                    "type": "array"
                },
                "header": {
                    "default": "X-Real-IP",
                    "description": "Header to get the client IP from",
                    "pattern": "^[a-zA-Z0-9\\-]+$",
                    "type": "string"
                },
                "recursive": {
                    "default": false,
                    "description": "Recursive resolve the IP",
                    "type": "boolean"
                }
            },
            "required": [
                "from"
            ],
            "type": "object"
        },
        "Omit<RedirectHTTP,\"use\">": {
            "additionalProperties": false,
            "type": "object"
        },
        "Omit<SetXForwarded,\"use\">": {
            "additionalProperties": false,
            "type": "object"
        },
        "ProxyScheme": {
            "enum": [
                "http",
                "https"
            ],
            "type": "string"
        },
        "Signal": {
            "enum": [
                "",
                "HUP",
                "INT",
                "QUIT",
                "SIGHUP",
                "SIGINT",
                "SIGQUIT",
                "SIGTERM",
                "TERM"
            ],
            "type": "string"
        },
        "StatusCode": {
            "anyOf": [
                {
                    "pattern": "^[0-9]*$",
                    "type": "string"
                },
                {
                    "type": "number"
                }
            ]
        },
        "StatusCodeRange": {
            "anyOf": [
                {
                    "pattern": "^[0-9]*$",
                    "type": "string"
                },
                {
                    "pattern": "^[0-9]*-[0-9]*$",
                    "type": "string"
                },
                {
                    "type": "number"
                }
            ]
        },
        "StopMethod": {
            "enum": [
                "kill",
                "pause",
                "stop"
            ],
            "type": "string"
        },
        "StreamScheme": {
            "enum": [
                "tcp",
                "udp"
            ],
            "type": "string"
        },
        "{[x:`${string}@file`]:NullOrEmptyMap;}": {
            "additionalProperties": false,
            "type": "object"
        },
        "{cidr_whitelist:Omit<CIDRWhitelist,\"use\">;cidrWhitelist:Omit<CIDRWhitelist,\"use\">;CIDRWhitelist:Omit<CIDRWhitelist,\"use\">;}": {
            "additionalProperties": false,
            "properties": {
                "CIDRWhitelist": {
                    "$ref": "#/definitions/Omit<CIDRWhitelist,\"use\">"
                },
                "cidrWhitelist": {
                    "$ref": "#/definitions/Omit<CIDRWhitelist,\"use\">"
                },
                "cidr_whitelist": {
                    "$ref": "#/definitions/Omit<CIDRWhitelist,\"use\">"
                }
            },
            "required": [
                "CIDRWhitelist",
                "cidrWhitelist",
                "cidr_whitelist"
            ],
            "type": "object"
        },
        "{cloudflare_real_ip:Omit<CloudflareRealIP,\"use\">;cloudflareRealIp:Omit<CloudflareRealIP,\"use\">;}": {
            "additionalProperties": false,
            "properties": {
                "cloudflareRealIp": {
                    "$ref": "#/definitions/Omit<CloudflareRealIP,\"use\">"
                },
                "cloudflare_real_ip": {
                    "$ref": "#/definitions/Omit<CloudflareRealIP,\"use\">"
                }
            },
            "required": [
                "cloudflareRealIp",
                "cloudflare_real_ip"
            ],
            "type": "object"
        },
        "{error_page:Omit<CustomErrorPage,\"use\">;errorPage:Omit<CustomErrorPage,\"use\">;ErrorPage:Omit<CustomErrorPage,\"use\">;custom_error_page:Omit<CustomErrorPage,\"use\">;customErrorPage:Omit<CustomErrorPage,\"use\">;CustomErrorPage:Omit<CustomErrorPage,\"use\">;}": {
            "additionalProperties": false,
            "properties": {
                "CustomErrorPage": {
                    "$ref": "#/definitions/Omit<CustomErrorPage,\"use\">"
                },
                "ErrorPage": {
                    "$ref": "#/definitions/Omit<CustomErrorPage,\"use\">"
                },
                "customErrorPage": {
                    "$ref": "#/definitions/Omit<CustomErrorPage,\"use\">"
                },
                "custom_error_page": {
                    "$ref": "#/definitions/Omit<CustomErrorPage,\"use\">"
                },
                "errorPage": {
                    "$ref": "#/definitions/Omit<CustomErrorPage,\"use\">"
                },
                "error_page": {
                    "$ref": "#/definitions/Omit<CustomErrorPage,\"use\">"
                }
            },
            "required": [
                "CustomErrorPage",
                "ErrorPage",
                "customErrorPage",
                "custom_error_page",
                "errorPage",
                "error_page"
            ],
            "type": "object"
        },
        "{hide_x_forwarded:Omit<HideXForwarded,\"use\">;hideXForwarded:Omit<HideXForwarded,\"use\">;HideXForwarded:Omit<HideXForwarded,\"use\">;}": {
            "additionalProperties": false,
            "properties": {
                "HideXForwarded": {
                    "$ref": "#/definitions/Omit<HideXForwarded,\"use\">"
                },
                "hideXForwarded": {
                    "$ref": "#/definitions/Omit<HideXForwarded,\"use\">"
                },
                "hide_x_forwarded": {
                    "$ref": "#/definitions/Omit<HideXForwarded,\"use\">"
                }
            },
            "required": [
                "HideXForwarded",
                "hideXForwarded",
                "hide_x_forwarded"
            ],
            "type": "object"
        },
        "{oidc:Omit<OIDC,\"use\">;OIDC:Omit<OIDC,\"use\">;}": {
            "additionalProperties": false,
            "properties": {
                "OIDC": {
                    "$ref": "#/definitions/Omit<OIDC,\"use\">"
                },
                "oidc": {
                    "$ref": "#/definitions/Omit<OIDC,\"use\">"
                }
            },
            "required": [
                "OIDC",
                "oidc"
            ],
            "type": "object"
        },
        "{rate_limit:Omit<RateLimit,\"use\">;rateLimit:Omit<RateLimit,\"use\">;RateLimit:Omit<RateLimit,\"use\">;}": {
            "additionalProperties": false,
            "properties": {
                "RateLimit": {
                    "$ref": "#/definitions/Omit<RateLimit,\"use\">"
                },
                "rateLimit": {
                    "$ref": "#/definitions/Omit<RateLimit,\"use\">"
                },
                "rate_limit": {
                    "$ref": "#/definitions/Omit<RateLimit,\"use\">"
                }
            },
            "required": [
                "RateLimit",
                "rateLimit",
                "rate_limit"
            ],
            "type": "object"
        },
        "{real_ip:Omit<RealIP,\"use\">;realIP:Omit<RealIP,\"use\">;RealIP:Omit<RealIP,\"use\">;}": {
            "additionalProperties": false,
            "properties": {
                "RealIP": {
                    "$ref": "#/definitions/Omit<RealIP,\"use\">"
                },
                "realIP": {
                    "$ref": "#/definitions/Omit<RealIP,\"use\">"
                },
                "real_ip": {
                    "$ref": "#/definitions/Omit<RealIP,\"use\">"
                }
            },
            "required": [
                "RealIP",
                "realIP",
                "real_ip"
            ],
            "type": "object"
        },
        "{redirect_http:Omit<RedirectHTTP,\"use\">;redirectHTTP:Omit<RedirectHTTP,\"use\">;RedirectHTTP:Omit<RedirectHTTP,\"use\">;}": {
            "additionalProperties": false,
            "properties": {
                "RedirectHTTP": {
                    "$ref": "#/definitions/Omit<RedirectHTTP,\"use\">"
                },
                "redirectHTTP": {
                    "$ref": "#/definitions/Omit<RedirectHTTP,\"use\">"
                },
                "redirect_http": {
                    "$ref": "#/definitions/Omit<RedirectHTTP,\"use\">"
                }
            },
            "required": [
                "RedirectHTTP",
                "redirectHTTP",
                "redirect_http"
            ],
            "type": "object"
        },
        "{request:Omit<ModifyRequest,\"use\">;Request:Omit<ModifyRequest,\"use\">;modify_request:Omit<ModifyRequest,\"use\">;modifyRequest:Omit<ModifyRequest,\"use\">;ModifyRequest:Omit<ModifyRequest,\"use\">;}": {
            "additionalProperties": false,
            "properties": {
                "ModifyRequest": {
                    "$ref": "#/definitions/Omit<ModifyRequest,\"use\">"
                },
                "Request": {
                    "$ref": "#/definitions/Omit<ModifyRequest,\"use\">"
                },
                "modifyRequest": {
                    "$ref": "#/definitions/Omit<ModifyRequest,\"use\">"
                },
                "modify_request": {
                    "$ref": "#/definitions/Omit<ModifyRequest,\"use\">"
                },
                "request": {
                    "$ref": "#/definitions/Omit<ModifyRequest,\"use\">"
                }
            },
            "required": [
                "ModifyRequest",
                "Request",
                "modifyRequest",
                "modify_request",
                "request"
            ],
            "type": "object"
        },
        "{response:Omit<ModifyResponse,\"use\">;Response:Omit<ModifyResponse,\"use\">;modify_response:Omit<ModifyResponse,\"use\">;modifyResponse:Omit<ModifyResponse,\"use\">;ModifyResponse:Omit<ModifyResponse,\"use\">;}": {
            "additionalProperties": false,
            "properties": {
                "ModifyResponse": {
                    "$ref": "#/definitions/Omit<ModifyResponse,\"use\">"
                },
                "Response": {
                    "$ref": "#/definitions/Omit<ModifyResponse,\"use\">"
                },
                "modifyResponse": {
                    "$ref": "#/definitions/Omit<ModifyResponse,\"use\">"
                },
                "modify_response": {
                    "$ref": "#/definitions/Omit<ModifyResponse,\"use\">"
                },
                "response": {
                    "$ref": "#/definitions/Omit<ModifyResponse,\"use\">"
                }
            },
            "required": [
                "ModifyResponse",
                "Response",
                "modifyResponse",
                "modify_response",
                "response"
            ],
            "type": "object"
        },
        "{set_x_forwarded:Omit<SetXForwarded,\"use\">;setXForwarded:Omit<SetXForwarded,\"use\">;SetXForwarded:Omit<SetXForwarded,\"use\">;}": {
            "additionalProperties": false,
            "properties": {
                "SetXForwarded": {
                    "$ref": "#/definitions/Omit<SetXForwarded,\"use\">"
                },
                "setXForwarded": {
                    "$ref": "#/definitions/Omit<SetXForwarded,\"use\">"
                },
                "set_x_forwarded": {
                    "$ref": "#/definitions/Omit<SetXForwarded,\"use\">"
                }
            },
            "required": [
                "SetXForwarded",
                "setXForwarded",
                "set_x_forwarded"
            ],
            "type": "object"
        }
    },
    "type": "object"
}

